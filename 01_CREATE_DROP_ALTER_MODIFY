# CREATE DATABASE Statement
# The CREATE DATABASE statement is used to create a new SQL database.
# Syntax : CREATE DATABASE databasename;

CREATE DATABASE testDB

# DROP DATABASE Statement
# The DROP DATABASE statement is used to drop an existing SQL database.
# Syntax : DROP DATABASE databasename;

DROP DATABASE testDB

# CREATE TABLE Statement
# The CREATE TABLE statement is used to create a new table in a database.
# Syntax : CREATE TABLE table_name (column1 datatype, column2 datatype,....);

CREATE TABLE testDB.persons (
	PersonID INT,
    LastName VARCHAR(30),
    FirstName VARCHAR(30),
    Address VARCHAR(255),
    City VARCHAR(30)
)
# The PersonID column is of type int and will hold an integer.
# The LastName, FirstName, Address, and City columns are of type varchar and will hold characters
# the maximum length for these fields is 255 characters.

# Create Table Using Another Table
# A copy of an existing table can also be created using CREATE TABLE.
# The new table gets the same column definitions. All columns or specific columns can be selected.
# If you create a new table using an existing table
# the new table will be filled with the existing values from the old table.
# Syntax -  CREATE TABLE new_table_name AS SELECT column1, column2,... FROM existing_table_name WHERE ....;

CREATE TABLE testDB.copytable 
AS SELECT * 
FROM testDB.persons

# DROP TABLE Statement
# DROP TABLE statement is used to drop an existing table in a database.
# Syntax : DROP TABLE table_name;

DROP TABLE testDB.copytable 

# ALTER TABLE Statement
# The ALTER TABLE statement is used to add, delete, or modify columns in an existing table.
# The ALTER TABLE statement is also used to add and drop various constraints on an existing table.
# Syntax ADD column : ALTER TABLE table_name ADD column_name datatype;
# Syntax DROP column : ALTER TABLE table_name DROP COLUMN column_name;
# Syntax ALTER/MODIFY COLUMN column : ALTER TABLE table_name MODIFY COLUMN column_name datatype;

ALTER TABLE testDB.persons 
ADD Email VARCHAR(25)

ALTER TABLE testDB.persons 
DROP COLUMN Email

ALTER TABLE testDB.persons
MODIFY COLUMN Address INTEGER

ALTER TABLE testDB.persons
MODIFY COLUMN Address VARCHAR(30)

# To check datatype
# You can get the MySQL table columns data type with the help of “information_schema.columns”.
# Syntax :
# SELECT DATA_TYPE from INFORMATION_SCHEMA.COLUMNS where table_schema = ’yourDatabaseName’ and table_name = ’yourTableName’.

SELECT COLUMN_NAME,DATA_TYPE FROM INFORMATION_SCHEMA.COLUMNS 
WHERE TABLE_SCHEMA = 'testDB'
AND TABLE_NAME = 'persons'
